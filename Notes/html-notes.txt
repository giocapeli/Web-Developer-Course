HTML BÁSICO:

1 - O que é HTML?
Não é uma linguagem de programação, mas sim uma markup language, linguagem de marcação, estruturada para dar significado e organizar as informações dos sites. 
Ela construída a partir de elementos formados por um conteúdo inserido dentro de uma tag.

2 - Elemento:
<Opening tag>Content</Closing tag>
A Opening tag fica entre '<>' (menor e maior) e indica o início do elemento, a Closing tag também fica entre '<>' porém com uma '/' para indica o fechamento.

3 - Elementos Vazios (Empty Elements):
Alguns elementos não possuem conteúdo ou fechamento e são chamados de elementos vazios. Ex:
<img src="imagem/imagem.jpg" alt "imagem de teste"> ou <br>

4 - Ordem dos elementos:
É possível inserir elementos dentro de elementos, porém um elemento deve estar sempre completamente dentro do outro, sem intersecções. Ex:
<p>Olá <strong>Mundo</p></strong> - Errado
<p>Olá <strong>Mundo</strong></p> - Correto

5 - Atributos:
São "detalhamentos", informações passadas dentro da tag para que ela se comporte de determinada maneira ou recebe determinada característica. São compostos por um nome e um valor e cada tag pode possuir diversos atributos. Ex:
<p nome="valor" nome2="valor2">Olá mundo.</p>
Alguns valores de atributos funcionam mesmo sem estarem entre áspas, porém mantêr o padrão ajuda o aprendizado e a leitura.

6 - Estrutura básica do HTML:
A estutura básica do HTML é composta por esses elementos:
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>Meu título</title>
	</head>
	<body>
		Conteúdo
	</body>
</html>

7 - <!DOCTYPE html>:
A primeira linha é sempre o DOCTYPE, ela não é uma tag mas sim uma instrução ao navegador de que o código a seguir é um html. É obrigatório.

8 - Html <html></html>:
É o elemento que envolve todo conteúdo, visível ou não, da página. Também chamado de root element.

9 - Head <head></head>:
É o elemento que serve como "container" de todo conteúdo ou instrução que não ficará visível na página principal, como o título da página, keywords, descrição para mecanismos de busca, referências aos CSS, entre outros.

10 - Title <title></title>:
Define o título da página que aparece na aba do browser, como padrão ao favoritar a página e como nome da página nas buscas do google.

11 - <meta charset="utf-8">:
Esse elemento indica que o documento utiliza o UTF-8, um padrão de código que inclui a grande maioria dos caracteres conhecidos e utilizados. Problemas na reprodução de acentos podem vir da utilização de outros códigos, como o ASCII. 

11.1 - Metatags:
Essas tags aparentam não ter nenhum efeito na página em si, mas fornecem informações externas para buscadores por exemplo. Além do charset já visto, segue outras metatags:
Author: Nome do autor da página.
Copyright: Direitos Autorais.
Description: DEscrição da página.
Expires: Data de expiração do documento.
Keywords: Palavras-chave relacionadas à página.

12 - Body <body></body>:
É o elemento que contêm o conteúdo que irá ser exibido para o usuário que estiver navegando na página.

13 - Imagens:
<img src="caminho ou url da imagem" alt="texto alternativo caso a imagem não possa ser exibida">
A mensagem alternativa deve de preferência ser descritiva e não apenas o nome da imagem, assim poderá exercer sua função.

14 - Marcações:
Os elementos básicos utilizados são:
a- Headings <h1></h1>: São os cabeçalhos que atribuem automaticamente certas características de relevância, tamanho, para o conteúdo interno. São 6 níveis de headings, do h1 ao h6.
b- Paragraphs <p></p>: Contêm o parágrafo, o texto de leitura regular.
c- Lists <ul><li></li></ul>: Elementos em listas, ordenadas em números (<ol>) ou não ordenas, com bullet points (<ul>). Cada item na lista fica dentro de uma tag <li></li>.
d- Strong <strong></strong>: Funciona como um <bold>, deixa o texto interno em negrito.
e- Itálico <em></em>: Deixa o texto em itálico, como o <i>.
f- Div <div></div>: São containers genéricos para agrupar outros elementos que tem algo em comum ou precisam receber algum atributo em comum. Os divs não são inline, portanto quebram a linha.
g- Spam <spam></spam>: É um container como o div porém é um elemento inline, que não quebra a linha.

15 - Links <a href="url">Link</a>:
Os links são compostos pela anchor tag <a>, o atributo do link (href), e o conteúdo (texto ou imagem). Ex:
<a href="caminho/index.html"><img src="caminho/imagem.jpg"></a>

16 - Comentários:
Os comentáios não são exibidos para o usuário e não tem nenhuma função na página, mas sim servem como guia de leitura e entendimento do código para o desenvolvedor. Os comentários são de suma importância e sua qualidade informativa é proporcional à complexidade e tamanho do código, quanto mais difícil e longo ele é, mais os comentários ajudam tanto quem escreveu quanto quem irá modificar a entender o que foi feito. Os comentários também servem para fazer testes no código, ativando ou desativando elementos.
Os comentários devem estar entre a seguite tag:
<!-- Comentário -->
(Caso o sublime esteja com problema para reconhecer o atalho ctrl+/ para adicionar comentário, mude para ctrl+1 por exemplo)

HTML Intermediário:

17 - Tabelas:
 Ex de tabela:
<table>
	<tr>
		<th>Primeira Coluna</th>
		<th>Segunda Coluna</th>
	</tr>
	<tr>
		<td>Primeiro Elemento</td>
		<td>Segundo Elemento</td>
	<tr>
		<td>X</td>
		<td>Y</td>
</table>

18 - Table Head, Table Body e Table Foot:
Para ficar mais fácil a leitura e facilitar a adição de styles ou scripts, podemos usar outros elementos para definir melhor as tabelas, o thead e o tbody. Utilizando o mesmo exemplo acima mas adicionando esses elementos:
<table>
	<thead>
		<tr>
			<th>Primeira Coluna</th>
			<th>Segunda Coluna</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Primeiro Elemento</td>
			<td>Segundo Elemento</td>
		<tr>
			<td>X</td>
			<td>Y</td>
	</tbody>
	<tfoot>
		<td>Soma</td>
		<td>Resultado</td>
	</tfoot>
</table>

19 - Mesclando colunas e linhas:
Para mesclar colunas e linhas usamos os atributos colspan="numero de colunas a mesclar" para mesclar colunas e rowspan="número de linhas a mesclar". Ex:
<table border="1">
	<thead>		
		<th colspan="2">Português</th>
		<th colspan="2">Inglês</th>
		<tr>
			<th>Masculino</th>
			<th>Feminino</th>
			<th>Masculino</th>
			<th>Feminino</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Professor</td>
			<td>Professora</td>
			<td colspan="2" rowspan="2">Teacher</td>
		</tr>
		<tr>
			<td colspan="2">Docente</td>
		</tr>
		
	</tbody>
</table>

19 - Formulários:
Os formulários também são elementos formados por outros elementos, como campos de preenchimento, caixas de seleção e botões de envio ou limpeza, entre outros.
<form>
</form>

20 - Inputs dos formulários:
São os elementos do formulário que recebem a informação do usuário, sejam os campos de preenchimento ou seleção. É um elemento vazio. Ex:
<input type="text">

21 - Types de input:
Os principais tipos de imput utlizados são:
- Texto: text. É usado para ler uma linha de texto. Ex:
- E-mail: email. Lê e-mail e caso seja um campo orbigatório, certifica-se que esteja seguindo algumas regras, como possuir @ e domínio.
- Data: date. É usado para selecionar datas. É possível adicionar atributos de restrições, como "max" e "min".
- Pontos de seleção: radio. É usado quando só é possível selecionar uma dentre todas opções. Após selecionado, a seleção pode ser trocada mas não é possível deixar desmarcado. 
- Caixa de marcação: select. É usado para selecionar várias opções, pode ser marcado e desmarcado quantas opções existirem, inclusive deixado em branco.
- Senha: password. É usado para ler senha e mostrar seu valor em "*" para que ela não seja exibida na tela. Pode receber outras validações, como tamanho mínimo e máximo.


22 - Texto dentro das caixas de formulário:
Para inserir a dica ou orientação do texto dentro do formulário usa-se o atributo "placeholder" seguido de "=" e do texto. Ex:
<input type="text" placeholder="Primeiro Nome">

23 - Botões dos formulários:
A tag para inserção de um botão é "button", entre as tags de abertura e fechamento vai o texto do botão. Ex:
<button>Enviar</button>

26 - Lista de seleção:
É uma caixa que abre uma lista de opções para serem selecionadas. Utilizamos a tag "select" para abrir a caixa, e, a tag "option" para cada opção.

24 - Atributos Name e Value:
Para que após a submissão do formulário haja relações entre os itens e uma resposta que possa ser lida e relacionada às opções, usamos os atributos "name" e "value". Por exemplo ao selecionarmos um item dentro das opções de "radio" precisamos definir que todos terão o mesmo "name" e cada um terá um "value", é como se "name" fosse a pergunta e "value" a resposta. Sem um "name", nesse caso, poderíamos selecionar todos os itens de "radio" pois eles não se relacionam. Ex:
Sem um "value" para cada item não conseguiríamos saber oq ue foi selecionado. Ex:

28 - Selected e Disabled:
Os atributos selected (campos selecionado automaticamente ao carregar a página) e disabled (campo não pode ser selecionado) podem ser usados em conjunto para criar uma dica do campo sem que ele possa ser selecionado. Ex: 

29 - REquired title
A mensagem que irá aparecer caso o campo de validação esteja incorreto.

28 - Autocomplete:
Usado para autocompletar campos que já foram preenchidos antes.

29 - Pattern:
Cria um padrão de regras a serem seguidas pelo campo, por exemplo limita o número máximo e mínimo de caracteres ou os caracteres que podem ser utilizados.

26 - Atributo Action:
- Action

25 - Labels:
As Labels são importantes para identificarmos os campos, e, principalmente, para acessibilidade. Programas e aplicativos acessíveis podem ler as labels para pessoas cegas ou com limitações visuais.
Usamos então a tag "label", e dentro dela colocamos a tag "input" que dejamos. Ex:
<form>
	<label>
		Nome:
		<input type="text" placeholder="Seu nome">
	</label>
</form>
Também podemos usar outra sintaxe para relacionar as labels com os inputs, usando atributto "for" e "id". Se o atributo "for", da label, for igual ao atributo "id", do input, ele relacionará um ao outro. Ex:
<form>
	<label for="minhapassword">Senha:</label>
	<input type="password" id="minhapassword" placeholder="Digite sua senha">
</form>
obs: Os valores dos atributos "for" e "id" não importam desde que sejam o mesmo para cada label, porém, é interessante que como tudo no código, ele tanha algum significado, faça sentido para quem lê e não sejam apenas palavras ou números aleatórios.




26 - Validação - Campos obrigatórios:
Muitas validações são feitas com javascript, porém é possível fazer algumas ainda no html:
O Campo obrigatório não pode ser vazio: Utilizamos o atributo "required", ele não necessita de um valor pois já é entendido como required="true". Caso o campo seja um e-mail, ele adiciona alguns outros pré-requisitos



27 - Área de Texto
Para inserir um campo de área de texto não se usa a tag "input" mas sim a "textarea".
Além do attribute name também é possível determinar outros dois atributos, rows e cols para determinar o tamanho da área de código. As linhas de códigos inseridas na página "HTML Basico" utilizaram esta tag. Os valores inseridos pelo usuário também serão recebidos como input.

29 - Exibir linhas de códigos no html:
Para exibir uma linha de código foram usados os códigos decimais para "<" e ">" que são respectivamente "&ls;" (less-than) e "&gt;" () 

Resumo Tabelas:
(criar um código comentado)

Resumo formulários:
(criar um código comentado)

PErguntas: Como mantêr os campos preenchidos após validação ou em caso de falha de validação de submisão?